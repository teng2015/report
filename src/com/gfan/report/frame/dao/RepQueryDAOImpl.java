package com.gfan.report.frame.dao;

import java.util.List;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.gfan.report.frame.module.RepQuery;
import com.gfan.report.frame.module.RepQueryExample;

public class RepQueryDAOImpl extends SqlMapClientDaoSupport implements RepQueryDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table REP_QUERY
     *
     * @ibatorgenerated Fri Sep 26 11:41:56 CST 2014
     */
    public RepQueryDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table REP_QUERY
     *
     * @ibatorgenerated Fri Sep 26 11:41:56 CST 2014
     */
    public int countByExample(RepQueryExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("REP_QUERY.ibatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table REP_QUERY
     *
     * @ibatorgenerated Fri Sep 26 11:41:56 CST 2014
     */
    public int deleteByExample(RepQueryExample example) {
        int rows = getSqlMapClientTemplate().delete("REP_QUERY.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table REP_QUERY
     *
     * @ibatorgenerated Fri Sep 26 11:41:56 CST 2014
     */
    public int deleteByPrimaryKey(String reportName) {
        RepQuery key = new RepQuery();
        key.setReportName(reportName);
        int rows = getSqlMapClientTemplate().delete("REP_QUERY.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table REP_QUERY
     *
     * @ibatorgenerated Fri Sep 26 11:41:56 CST 2014
     */
    public void insert(RepQuery record) {
        getSqlMapClientTemplate().insert("REP_QUERY.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table REP_QUERY
     *
     * @ibatorgenerated Fri Sep 26 11:41:56 CST 2014
     */
    public void insertSelective(RepQuery record) {
        getSqlMapClientTemplate().insert("REP_QUERY.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table REP_QUERY
     *
     * @ibatorgenerated Fri Sep 26 11:41:56 CST 2014
     */
    public List selectByExample(RepQueryExample example) {
        List list = getSqlMapClientTemplate().queryForList("REP_QUERY.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table REP_QUERY
     *
     * @ibatorgenerated Fri Sep 26 11:41:56 CST 2014
     */
    public RepQuery selectByPrimaryKey(String reportName) {
        RepQuery key = new RepQuery();
        key.setReportName(reportName);
        RepQuery record = (RepQuery) getSqlMapClientTemplate().queryForObject("REP_QUERY.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table REP_QUERY
     *
     * @ibatorgenerated Fri Sep 26 11:41:56 CST 2014
     */
    public int updateByExampleSelective(RepQuery record, RepQueryExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("REP_QUERY.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table REP_QUERY
     *
     * @ibatorgenerated Fri Sep 26 11:41:56 CST 2014
     */
    public int updateByExample(RepQuery record, RepQueryExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("REP_QUERY.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table REP_QUERY
     *
     * @ibatorgenerated Fri Sep 26 11:41:56 CST 2014
     */
    public int updateByPrimaryKeySelective(RepQuery record) {
        int rows = getSqlMapClientTemplate().update("REP_QUERY.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table REP_QUERY
     *
     * @ibatorgenerated Fri Sep 26 11:41:56 CST 2014
     */
    public int updateByPrimaryKey(RepQuery record) {
        int rows = getSqlMapClientTemplate().update("REP_QUERY.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table REP_QUERY
     *
     * @ibatorgenerated Fri Sep 26 11:41:56 CST 2014
     */
    private static class UpdateByExampleParms extends RepQueryExample {
        private Object record;

        public UpdateByExampleParms(Object record, RepQueryExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}